/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/robot_pret_screen/Robot_pretViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <images/BitmapDatabase.hpp>

Robot_pretViewBase::Robot_pretViewBase() :
    buttonCallback(this, &Robot_pretViewBase::buttonCallbackHandler)
{
    __background.setPosition(0, 0, 800, 480);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    fond.setPosition(0, 0, 800, 480);
    fond.setColor(touchgfx::Color::getColorFromRGB(99, 0, 59));
    add(fond);

    texte_mode_competition.setXY(607, 10);
    texte_mode_competition.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    texte_mode_competition.setLinespacing(0);
    texte_mode_competition.setTypedText(touchgfx::TypedText(T___SINGLEUSE_8Y5L));
    add(texte_mode_competition);

    texte_mode_competition_1.setXY(7, 150);
    texte_mode_competition_1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    texte_mode_competition_1.setLinespacing(0);
    texte_mode_competition_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_HJ3M));
    add(texte_mode_competition_1);

    bouton_home.setXY(0, 0);
    bouton_home.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_HOME_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_DONE_50_50_E8F6FB_SVG_ID));
    bouton_home.setIconXY(5, 5);
    bouton_home.setAction(buttonCallback);
    add(bouton_home);

    bouton_retour.setXY(0, 420);
    bouton_retour.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_CONTENT_REPLY_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_DONE_50_50_E8F6FB_SVG_ID));
    bouton_retour.setIconXY(5, 5);
    bouton_retour.setAction(buttonCallback);
    add(bouton_retour);
}

Robot_pretViewBase::~Robot_pretViewBase()
{

}

void Robot_pretViewBase::setupScreen()
{

}

void Robot_pretViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &bouton_home)
    {
        //vers_home
        //When bouton_home clicked change screen to Home
        //Go to Home with no screen transition
        application().gotoHomeScreenNoTransition();
    }
    if (&src == &bouton_retour)
    {
        //vers_choix_strat
        //When bouton_retour clicked change screen to Choix_strategie
        //Go to Choix_strategie with no screen transition
        application().gotoChoix_strategieScreenNoTransition();
        //vers_choix_strategie
        //When bouton_retour clicked change screen to Choix_strategie
        //Go to Choix_strategie with no screen transition
        application().gotoChoix_strategieScreenNoTransition();
    }
}

void Robot_pretViewBase::handleTickEvent()
{
    //fonction_attente_tirette
    //When every N tick call virtual function
    //Call attente_tirette
    attente_tirette();

    //vers_robot_en_match
    //When fonction_attente_tirette completed change screen to Robot_en_match
    //Go to Robot_en_match with no screen transition
    application().gotoRobot_en_matchScreenNoTransition();
}
