/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef FRONTENDHEAPBASE_HPP
#define FRONTENDHEAPBASE_HPP

#include <common/Meta.hpp>
#include <common/Partition.hpp>
#include <mvp/MVPHeap.hpp>

#include <touchgfx/transitions/NoTransition.hpp>
#include <gui/common/FrontendApplication.hpp>
#include <gui/model/Model.hpp>

#include <gui/home_screen/HomeView.hpp>
#include <gui/home_screen/HomePresenter.hpp>
#include <gui/choix_strategie_screen/Choix_strategieView.hpp>
#include <gui/choix_strategie_screen/Choix_strategiePresenter.hpp>
#include <gui/robot_pret_screen/Robot_pretView.hpp>
#include <gui/robot_pret_screen/Robot_pretPresenter.hpp>
#include <gui/robot_en_match_screen/Robot_en_matchView.hpp>
#include <gui/robot_en_match_screen/Robot_en_matchPresenter.hpp>
#include <gui/choix_tests_screen/Choix_testsView.hpp>
#include <gui/choix_tests_screen/Choix_testsPresenter.hpp>
#include <gui/tests_moteurs_screen/Tests_moteursView.hpp>
#include <gui/tests_moteurs_screen/Tests_moteursPresenter.hpp>
#include <gui/test_lidar_bas_screen/Test_lidar_basView.hpp>
#include <gui/test_lidar_bas_screen/Test_lidar_basPresenter.hpp>
#include <gui/test_lidar_haut_screen/Test_lidar_hautView.hpp>
#include <gui/test_lidar_haut_screen/Test_lidar_hautPresenter.hpp>


/**
 * This class provides the memory that shall be used for memory allocations
 * in the frontend. A single instance of the FrontendHeap is allocated once (in heap
 * memory), and all other frontend objects such as views, presenters and data model are
 * allocated within the scope of this FrontendHeap. As such, the RAM usage of the entire
 * user interface is sizeof(FrontendHeap).
 *
 * @note The FrontendHeap reserves memory for the most memory-consuming presenter and
 * view only. The largest of these classes are determined at compile-time using template
 * magic. As such, it is important to add all presenters, views and transitions to the
 * type lists in this class.
 *
 */
class FrontendHeapBase : public touchgfx::MVPHeap
{
public:
    /**
     * A list of all view types. Must end with meta::Nil.
     * @note All view types used in the application MUST be added to this list!
     */
    typedef touchgfx::meta::TypeList< HomeView,
            touchgfx::meta::TypeList< Choix_strategieView,
            touchgfx::meta::TypeList< Robot_pretView,
            touchgfx::meta::TypeList< Robot_en_matchView,
            touchgfx::meta::TypeList< Choix_testsView,
            touchgfx::meta::TypeList< Tests_moteursView,
            touchgfx::meta::TypeList< Test_lidar_basView,
            touchgfx::meta::TypeList< Test_lidar_hautView,
            touchgfx::meta::Nil > > > > > > >
            > GeneratedViewTypes;

    /**
     * Determine (compile time) the View type of largest size.
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedViewTypes >::type MaxGeneratedViewType;

    /**
     * A list of all presenter types. Must end with meta::Nil.
     * @note All presenter types used in the application MUST be added to this list!
     */
    typedef touchgfx::meta::TypeList< HomePresenter,
            touchgfx::meta::TypeList< Choix_strategiePresenter,
            touchgfx::meta::TypeList< Robot_pretPresenter,
            touchgfx::meta::TypeList< Robot_en_matchPresenter,
            touchgfx::meta::TypeList< Choix_testsPresenter,
            touchgfx::meta::TypeList< Tests_moteursPresenter,
            touchgfx::meta::TypeList< Test_lidar_basPresenter,
            touchgfx::meta::TypeList< Test_lidar_hautPresenter,
            touchgfx::meta::Nil > > > > > > >
            > GeneratedPresenterTypes;

    /**
     * Determine (compile time) the Presenter type of largest size.
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedPresenterTypes >::type MaxGeneratedPresenterType;

    /**
     * A list of all transition types. Must end with meta::Nil.
     * @note All transition types used in the application MUST be added to this list!
     */
    typedef touchgfx::meta::TypeList< touchgfx::NoTransition,
            touchgfx::meta::Nil
            > GeneratedTransitionTypes;

    /**
     * Determine (compile time) the Transition type of largest size.
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoHomeScreenNoTransition();
    }
protected:
    FrontendHeapBase(touchgfx::AbstractPartition& presenters, touchgfx::AbstractPartition& views, touchgfx::AbstractPartition& transitions, FrontendApplication& app)
        : MVPHeap(presenters, views, transitions, app)
    {

    }

};

#endif // FRONTENDHEAPBASE_HPP
